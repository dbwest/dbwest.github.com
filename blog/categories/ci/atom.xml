<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: CI | Testblog]]></title>
  <link href="http://dbwest.github.io/blog/categories/ci/atom.xml" rel="self"/>
  <link href="http://dbwest.github.io/"/>
  <updated>2013-10-08T07:53:02-04:00</updated>
  <id>http://dbwest.github.io/</id>
  <author>
    <name><![CDATA[David West]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Moving Towards a Complete Testing Environment in a Box]]></title>
    <link href="http://dbwest.github.io/blog/2013/10/08/moving-towards-a-complete-testing-environment-in-a-box/"/>
    <updated>2013-10-08T07:42:00-04:00</updated>
    <id>http://dbwest.github.io/blog/2013/10/08/moving-towards-a-complete-testing-environment-in-a-box</id>
    <content type="html"><![CDATA[<h2>Current Status</h2>

<p>I&rsquo;ve been working on a self contained Vagrant box for testing. Currently it loads, Appium, Jenkins, and rvm and some other things. It provisions from a base image and forwards the ports for Jenkins.</p>

<h2>What&rsquo;s Next</h2>

<p>I still need to
&ndash; Find a way to have the box drive tests on simulators on the host machine. I&rsquo;m going to see if the guest box can do this, even if the host box isn&rsquo;t the machine with Appium. I want the Vagrant box to have as much on it as I can put on it, and I want to see if it can be where Appium resides.
&ndash; Modify the tests to use Appium remotely on the Vagrant box. I&rsquo;ll want to fork a test repo I&rsquo;ve been working on, modify it to work with the new setup
&ndash; Make jobs to kick off the tests.
&ndash; And maybe more! I&rsquo;ll find out&hellip;</p>

<p>The prospect of doing this is very exciting to me. Setting all this up takes a lot of steps, so when done by hand, it may work on one machine and not on another. This should get closer to solving that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Starting up the GenyMotion emulator from the commandline]]></title>
    <link href="http://dbwest.github.io/blog/2013/09/18/starting-up-the-genymotion-emulator-from-the-commandline/"/>
    <updated>2013-09-18T11:33:00-04:00</updated>
    <id>http://dbwest.github.io/blog/2013/09/18/starting-up-the-genymotion-emulator-from-the-commandline</id>
    <content type="html"><![CDATA[<p>This is really useful for CI. In your Jenkins or Hudson jobs, you will want to be able to script emulator startup and shutdown.</p>

<h2>Howto</h2>

<p>First:
<code>VBoxManage list vms</code> to see all your VMs</p>

<p>Then:
<code>/Applications/Genymotion.app/Contents/MacOS/player --vm-name "xxxx"</code> (xxxx is virtual device name)</p>

<h2>Thanks</h2>

<p>Thanks to the Genymotion support staff.</p>
]]></content>
  </entry>
  
</feed>
